openapi: 3.0.0
info:
  version: 1.0.0
  title: 受講管理アプリ API
servers:
  - url: 'http://localhost:8080'
paths:
  /login:
    post:
      tags:
        - Login-Student
      operationId: postLoginStudent
      summary: "生徒ログイン"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "email"
                - "password"
              type: "object"
              properties:
                email:
                  type: "string"
                  description: メールアドレス
                  example: 'test@example.com'
                password:
                  type: "string"
                  description: パスワード
                  example: 'password'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  message:
                    type: "string"
                    example: 'Authenticated.'
  /logout:
    post:
      tags:
        - Login-Student
      operationId: postLogoutStudent
      summary: "生徒ログアウト"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: 'Unauthenticated.'
  /login/instructor:
    post:
      tags:
        - Login-Instructor
      operationId: postLoginInstructor
      summary: "講師ログイン"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "email"
                - "password"
              type: "object"
              properties:
                email:
                  type: "string"
                  description: メールアドレス
                  example: 'test@example.com'
                password:
                  type: "string"
                  description: パスワード
                  example: 'password'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  message:
                    type: "string"
                    example: 'Authenticated.'
  /logout/instructor:
    post:
      tags:
        - Login-Instructor
      operationId: postLogoutInstructor
      summary: "講師ログアウト"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: 'Unauthenticated.'
  /api/v1/user:
    get:
      tags:
        - Login-User
      operationId: getLoginUser
      summary: "認証者情報を取得する"
      responses:
        '200':
          description: 認証者情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  given_name_by_instructor:
                    $ref: '#/schemas/student/GivenNameByInstructor'
                  nick_name:
                    $ref: '#/schemas/student/NickName'
                  last_name:
                    $ref: '#/schemas/student/LastName'
                  first_name:
                    $ref: '#/schemas/student/FirstName'
                  occupation:
                    $ref: '#/schemas/student/Occupation'
                  email:
                    $ref: '#/schemas/student/Email'
                  purpose:
                    $ref: '#/schemas/student/Purpose'
                  birth_date:
                    $ref: '#/schemas/student/BirthDate'
                  sex:
                    $ref: '#/schemas/student/Sex'
                  address:
                    $ref: '#/schemas/student/Address'

  /api/v1/student/:
    patch:
      tags:
        - Student
      operationId: patchStudent
      summary: "生徒情報を更新する。"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nick_name:
                  $ref: '#/schemas/student/NickName'
                last_name:
                  $ref: '#/schemas/student/LastName'
                first_name:
                  $ref: '#/schemas/student/FirstName'
                occupation:
                  $ref: '#/schemas/student/Occupation'
                purpose:
                  $ref: '#/schemas/student/Purpose'
                email:
                  $ref: '#/schemas/student/Email'
                birth_date:
                  $ref: '#/schemas/student/BirthDate'
                sex:
                  $ref: '#/schemas/student/Sex'
                address:
                  $ref: '#/schemas/student/Address'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      nick_name:
                        $ref: '#/schemas/student/NickName'
                      last_name:
                        $ref: '#/schemas/student/LastName'
                      first_name:
                        $ref: '#/schemas/student/FirstName'
                      occupation:
                        $ref: '#/schemas/student/Occupation'
                      purpose:
                        $ref: '#/schemas/student/Purpose'
                      email:
                        $ref: '#/schemas/student/Email'
                      birth_date:
                        $ref: '#/schemas/student/BirthDate'
                      sex:
                        $ref: '#/schemas/student/Sex'
                      address:
                        $ref: '#/schemas/student/Address'
  /api/v1/student/edit:
    get:
      tags:
        - Student
      operationId: getStudent
      summary: "生徒情報を取得する。"
      responses:
        '200':
          description: 生徒情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: object
                    properties:
                      student_id:
                        $ref: '#/schemas/student/StudentId'
                      nick_name:
                        $ref: '#/schemas/student/NickName'
                      last_name:
                        $ref: '#/schemas/student/LastName'
                      first_name:
                        $ref: '#/schemas/student/FirstName'
                      occupation:
                        $ref: '#/schemas/student/Occupation'
                      purpose:
                        $ref: '#/schemas/student/Purpose'
                      email:
                        $ref: '#/schemas/student/Email'
                      birth_date:
                        $ref: '#/schemas/student/BirthDate'
                      sex:
                        $ref: '#/schemas/student/Sex'
                      address:
                        $ref: '#/schemas/student/Address'
                      profile_image:
                        $ref: '#/schemas/student/ProfileImage'
  /api/v1/course/index:
    get:
      tags:
        - Student-Course
      operationId: getCourseIndex
      summary: "受講講座情報の一覧を取得する。"
      parameters:
        - name: student_id
          in: query
          description: 受講者テーブル主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 受講講座一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        course_id:
                          type: integer
                          example: 1
                        title:
                          $ref: '#/schemas/course/Title'
                        image:
                          $ref: '#/schemas/course/Image'
                        instructor:
                          type: object
                          properties:
                            instructor_id:
                              $ref: '#/schemas/instructor/InstructorId'
                            nick_name:
                              $ref: '#/schemas/instructor/NickName'
                            last_name:
                              $ref: '#/schemas/instructor/LastName'
                            first_name:
                              $ref: '#/schemas/instructor/FirstName'
                            email:
                              $ref: '#/schemas/instructor/Email'
                        attendance:
                          type: object
                          properties:
                            attendance_id:
                              $ref: '#/schemas/attendance/AttendanceId'
                            progress:
                              $ref: '#/schemas/attendance/Progress'
  /api/v1/course:
    get:
      tags:
        - Student-Course
      operationId: getCourse
      summary: "受講講座の詳細情報を取得する。"
      parameters:
        - name: attendance_id
          in: query
          description: 受講テーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: 講座詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      course_id:
                        type: integer
                        example: 1
                      title:
                        $ref: '#/schemas/course/Title'
                      image:
                        $ref: '#/schemas/course/Image'
                      instructor:
                        type: object
                        properties:
                          instructor_id:
                            $ref: '#/schemas/instructor/InstructorId'
                          nick_name:
                            $ref: '#/schemas/instructor/NickName'
                          last_name:
                            $ref: '#/schemas/instructor/LastName'
                          first_name:
                            $ref: '#/schemas/instructor/FirstName'
                          email:
                            $ref: '#/schemas/instructor/Email'
                      attendance:
                        type: object
                        properties:
                          attendance_id:
                            $ref: '#/schemas/attendance/AttendanceId'
                          progress:
                            $ref: '#/schemas/attendance/Progress'
                      chapters:
                        type: array
                        items:
                          type: object
                          properties:
                            chapter_id:
                              $ref: '#/schemas/chapter/ChapterId'
                            title:
                              $ref: '#/schemas/chapter/Title'
                            lessons:
                              type: array
                              items:
                                type: object
                                properties:
                                  lesson_id:
                                    $ref: '#/schemas/lesson/LessonId'
                                  title:
                                    $ref: '#/schemas/lesson/Title'
                                  url:
                                    $ref: '#/schemas/lesson/Url'
                                  remarks:
                                    $ref: '#/schemas/lesson/Remarks'
                                  lesson_attendance:
                                    type: object
                                    properties:
                                      lesson_attendance_id:
                                        $ref: '#/schemas/lesson-attendance/LessonAttendanceId'
                                      status:
                                        $ref: '#/schemas/lesson-attendance/Status'
  /api/v1/course/{course_id}/progress:
    get:
      tags:
        - Student-Course
      operationId: getCourseProgress
      summary: "受講講座の進捗率を取得する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: 講座進捗率
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      course:
                        type: object
                        properties:
                          course_id:
                            $ref: '#/schemas/course/CourseId'
                          progress:
                            type: integer
                            example: 10
                      number_of_completed_chapters:
                        type: integer
                        example: 1
                      number_of_total_chapters:
                        type: integer
                        example: 3
                      number_of_completed_lessons:
                        type: integer
                        example: 2
                      number_of_total_lessons:
                        type: integer
                        example: 6
                      continue_lesson_id:
                        type: integer
                        example: 3
                      youngestUnCompletedLessonId:
                        type: integer
                        example: 4

  /api/v1/course/chapter:
    get:
      tags:
        - Student-Chapter
      operationId: getChapter
      summary: "受講講座のチャプターの詳細情報を取得する。"
      parameters:
        - name: chapter_id
          in: query
          description: チャプターテーブルの主キー
          required: true
          type: integer
        - name: attendance_id
          in: query
          description: 受講テーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: チャプター詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      chapter_id:
                        $ref: '#/schemas/chapter/ChapterId'
                      title:
                        $ref: '#/schemas/chapter/Title'
                      lessons:
                        type: array
                        items:
                          type: object
                          properties:
                            lesson_id:
                              $ref: '#/schemas/lesson/LessonId'
                            title:
                              $ref: '#/schemas/lesson/Title'
                            url:
                              $ref: '#/schemas/lesson/Url'
                            remarks:
                              $ref: '#/schemas/lesson/Remarks'
                            lesson_attendance:
                              type: object
                              properties:
                                lesson_attendance_id:
                                  $ref: '#/schemas/lesson-attendance/LessonAttendanceId'
                                status:
                                  $ref: '#/schemas/lesson-attendance/Status'
  
  /api/v1/lesson-attendance:
    patch:
      tags:
        - Lesson-Attendance
      operationId: patchLessonAttendance
      summary: "レッスン受講状態更新"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "lesson_attendance_id"
                - "status"
              type: "object"
              properties:
                lesson_attendance_id:
                  type: "int"
                  description: レッスン受講状態ID
                  example: 1
                status:
                  type: "string"
                  description: 状態(受講前、受講中、受講完了)
                  example: 'in_attendance'
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
# 講師-講座
  /api/v1/instructor/course/index:
    get:
      tags:
        - Instructor-Course
      operationId: getInstructorCourseIndex
      summary: "講師講座一覧参照"
      responses:
        '200':
          description: 講座一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        course_id:
                          $ref: '#/schemas/course/CourseId'
                        title:
                          $ref: '#/schemas/course/Title'
                        image:
                          $ref: '#/schemas/course/Image'
                        status:
                          $ref: '#/schemas/course/Status'
  /api/v1/instructor/course/{course_id}:
    get:
      tags:
        - Instructor-Course
      operationId: getInstructorCourse
      summary: "講座の詳細情報を取得する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: 講座詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: object
                    properties:
                      course_id:
                        $ref: '#/schemas/course/CourseId'
                      title:
                        $ref: '#/schemas/course/Title'
                      image:
                        $ref: '#/schemas/course/Image'
                      status:
                        $ref: '#/schemas/course/Status'
                      chapters:
                        type: array
                        items:
                          type: object
                          properties:
                            chapter_id:
                              $ref: '#/schemas/chapter/ChapterId'
                            title:
                              $ref: '#/schemas/chapter/Title'
                            order:
                              $ref: '#/schemas/chapter/Order'
                            lessons:
                              type: array
                              items:
                                type: object
                                properties:
                                  lesson_id:
                                    $ref: '#/schemas/lesson/LessonId'
                                  title:
                                    $ref: '#/schemas/lesson/Title'
                                  url:
                                    $ref: '#/schemas/lesson/Url'
                                  remarks:
                                    $ref: '#/schemas/lesson/Remarks'
    post:
      tags:
        - Instructor-Course
      operationId: patchInstructorCourse
      summary: "講座情報を更新する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                title:
                  type: "string"
                  description: タイトル
                  example: '講座タイトル'
                image:
                  type: "file"
                  description: 画像ファイル
                  example: 'thumbnail.png'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  data: 
                    type: object
                    properties:
                      course_id:
                        $ref: '#/schemas/course/CourseId'
                      title:
                        $ref: '#/schemas/course/Title'
                      image:
                        $ref: '#/schemas/course/Image'
                      status:
                        $ref: '#/schemas/course/Status'
    delete:
      tags:
        - Instructor-Course
      operationId: deleteInstructorCourse
      summary: "講座情報を削除する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  /api/v1/instructor/course/{course_id}/edit:
    get:
      tags:
        - Instructor-Course
      operationId: getInstructorCourseEdit
      summary: "編集講座の情報を取得する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: 講座詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: object
                    properties:
                      course_id:
                        $ref: '#/schemas/course/CourseId'
                      title:
                        $ref: '#/schemas/course/Title'
                      image:
                        $ref: '#/schemas/course/Image'
                      status:
                        $ref: '#/schemas/course/Status'
  /api/v1/instructor/course:
    post:
      tags:
        - Instructor-Course
      operationId: postInstructorCourse
      summary: "講座情報を登録する。"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                title:
                  type: "string"
                  description: タイトル
                  example: '講座タイトル'
                image:
                  type: "file"
                  description: 画像ファイル
                  example: 'thumbnail.png'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  /api/v1/instructor/course/{course_id}/attendance/status:
    get:
      tags:
        - Instructor-Course
      operationId: getInstructorCourseAttendanceStatus
      summary: "講座の受講状況を取得する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: 講座受講状況
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        chapters:
                          type: array
                          items:
                            type: object
                            properties:
                              chapter_id:
                                $ref: '#/schemas/chapter/ChapterId'
                              title:
                                $ref: '#/schemas/chapter/Title'
                              completed_count:
                                type: integer
                                example: 1
  /api/v1/instructor/course/{course_id}/notification:
    post:
      tags:
        - Instructor-Course
      operationId: postInstructorCourseNotification
      summary: "講座のお知らせを登録する。"
      parameters:
        - name: course_id
          in: path
          description: 講座ID
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "title"
                - "body"
              type: "object"
              properties:
                title:
                  type: "string"
                  description: お知らせタイトル
                  example: 'レッスン「変数とは？」閲覧について'
                content:
                  type: "string"
                  description: 本文
                  example: '10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。'
                start_date:
                  type: "string"
                  description: お知らせ開始日
                  example: '2021-10-01 00:00:00'
                end_date:
                  type: "string"
                  description: お知らせ終了日
                  example: '2021-10-10 00:00:00'
                type:
                  type: "string"
                  description: お知らせタイプ
                  example: 'once'
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  /api/v1/instructor/course/{course_id}/student/index:
    get:
      tags:
        - Instructor-Course
      operationId: getInstructorCourseStudentIndex
      summary: "講座の受講生一覧を取得する。"
      parameters:
        - name: course_id
          in: path
          description: 講座ID
          required: true
          type: integer
      responses:
        '200':
          description: 講座受講生一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        course:
                          type: object
                          properties:
                            course_id:
                              $ref: '#/schemas/course/CourseId'
                            title:
                              $ref: '#/schemas/course/Title'
                            image:
                              $ref: '#/schemas/course/Image'
                        students:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                $ref: '#/schemas/student/StudentId'
                              nick_name:
                                $ref: '#/schemas/student/NickName'
                              email:
                                $ref: '#/schemas/student/Email'
                              course_title:
                                $ref: '#/schemas/course/Title'
                              last_login_at:
                                $ref: '#/schemas/student/LastLoginAt'
                              attendanced_at:
                                $ref: '#/schemas/attendance/AttendancedAt'
                          pagination:
                            type: object
                            properties:
                              page:
                                type: integer
                                example: 1
                              total:
                                type: integer
                                example: 1

  # 講師-講座-チャプター
  /api/v1/instructor/course/{course_id}/chapter:
    post:
      tags:
        - Instructor-Chapter
      operationId: postInstructorChapter
      summary: "チャプター情報を登録する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  $ref: '#/schemas/chapter/Title'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}:
    get:
      tags:
        - Instructor-Chapter
      operationId: getInstructorChapter
      summary: "チャプターの詳細情報を取得する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: チャプター詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      chapter_id:
                        $ref: '#/schemas/chapter/ChapterId'
                      title:
                        $ref: '#/schemas/chapter/Title'
                      lessons:
                        type: array
                        items:
                          type: object
                          properties:
                            lesson_id:
                              $ref: '#/schemas/lesson/LessonId'
                            title:
                              $ref: '#/schemas/lesson/Title'
                            url:
                              $ref: '#/schemas/lesson/Url'
                            remarks:
                              $ref: '#/schemas/lesson/Remarks'
                            order:
                              $ref: '#/schemas/lesson/Order'
    patch:
      tags:
        - Instructor-Chapter
      operationId: patchInstructorChapter
      summary: "チャプター情報を更新する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  type: "string"
                  description: タイトル
                  example: 'チャプタータイトル'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
    delete:
      tags:
        - Instructor-Chapter
      operationId: deleteInstructorChapter
      summary: "チャプター情報を削除する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/sort:
    post:
      tags:
        - Instructor-Chapter
      operationId: sortInstructorChapter
      summary: "チャプター情報の並び順を更新する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                chapters:
                  type: "array"
                  description: チャプターの配列
                  items:
                    type: "object"
                    properties:
                      chapter_id:
                        $ref: '#/schemas/chapter/ChapterId'
                      order:
                        $ref: '#/schemas/chapter/Order'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/status:
    patch:
      tags:
        - Instructor-Chapter
      operationId: patchInstructorChapterStatus
      summary: "チャプターの公開状態を更新する。"
      parameters:
        - name: course_id
          in: path
          description: 講座ID
          required: true
          type: integer
        - name: chapter_id
          in: path
          description: チャプターID
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "status"
              type: "object"
              properties:
                status:
                  type: "string"
                  description: 状態(公開、非公開)
                  example: 'public'
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  # 講師-講座-チャプター-レッスン
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/lesson:
    post:
      tags:
        - Instructor-Lesson
      operationId: storeInstructorChapterLesson
      summary: "レッスン情報を登録する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  type: "string"
                  description: タイトル
                  example: 'swaggerの書き方'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  data:
                    type: "object"
                    properties:
                      lesson_id:
                        $ref: '#/schemas/lesson/LessonId'
                      title:
                        $ref: '#/schemas/lesson/Title'
                      status:
                        $ref: '#/schemas/lesson/Status'
                      order:
                        $ref: '#/schemas/lesson/Order'
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/lesson/{lesson_id}}:
    patch:
      tags:
        - Instructor-Lesson
      operationId: patchInstructorChapterLesson
      summary: "レッスン情報を更新する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  type: "string"
                  description: タイトル
                  example: 'レッスンタイトル'
                url:
                  type: "string"
                  description: URL
                  example: 'https://www.youtube.com/watch?v=xxxxxxxxxxx'
                remarks:
                  type: "string"
                  description: 備考
                  example: '備考'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
    delete:
      tags:
        - Instructor-Lesson
      operationId: deleteInstructorChapterLesson
      summary: "レッスン情報を削除する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/lesson/sort:
    post:
      tags: 
        - Instructor-Lesson
      operationId: sortInstructorChapterLesson
      summary: "レッスン情報の並び順を更新する。"
      parameters:
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          type: integer 
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                lessons:
                  type: "array"
                  description: レッスンの配列
                  items:
                    type: "object"
                    properties:
                      lesson_id:
                        $ref: '#/schemas/lesson/LessonId'
                      order:
                        $ref: '#/schemas/lesson/Order'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  /api/v1/instructor/attendance:
    post:
      tags: 
        - Instructor-Attendance
      operationId: postInstructorAttendance
      summary: "受講情報を登録する。"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                student_id:
                  type: "integer"
                  description: 生徒テーブル主キー
                  example: 1
                course_id:
                  type: "integer"
                  description: 講座テーブル主キー
                  example: 1
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
  # 講師-お知らせ
  /api/v1/instructor/notification/index:
    get:
      tags:
        - Instructor-Notification
      operationId: getInstructorNotificationIndex
      summary: "お知らせ一覧を取得する。"
      responses:
        '200':
          description: お知らせ一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        notifications:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                $ref: '#/schemas/notification/NotificationId'
                              title:
                                $ref: '#/schemas/notification/Title'
                              content:
                                $ref: '#/schemas/notification/Content'
                              start_date:
                                $ref: '#/schemas/notification/StartDate'
                              end_date:
                                $ref: '#/schemas/notification/EndDate'
                              type:
                                $ref: '#/schemas/notification/Type'
                        pagination:
                          type: object
                          properties:
                            page:
                              $ref: '#/schemas/pagination/Page'
                            total:
                              $ref: '#/schemas/pagination/Total'
  /api/v1/instructor/notification/{notification_id}:
    get:
      tags:
        - Instructor-Notification
      operationId: getInstructorNotification
      summary: "お知らせの詳細情報を取得する。"
      parameters:
        - name: notification_id
          in: path
          description: お知らせテーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: お知らせ詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      notification_id:
                        $ref: '#/schemas/notification/NotificationId'
                      couse_id:
                        $ref: '#/schemas/course/CourseId'
                      title:
                        $ref: '#/schemas/notification/Title'
                      content:
                        $ref: '#/schemas/notification/Content'
                      start_date:
                        $ref: '#/schemas/notification/StartDate'
                      end_date:
                        $ref: '#/schemas/notification/EndDate'
                      type:
                        $ref: '#/schemas/notification/Type'
    patch:
      tags:
        - Instructor-Notification
      operationId: patchInstructorNotification
      summary: "お知らせ情報を更新する。"
      parameters:
        - name: notification_id
          in: path
          description: お知らせテーブルの主キー
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "title"
                - "content"
                - "start_date"
                - "end_date"
                - "type"
              type: "object"
              properties:
                title:
                  type: "string"
                  description: お知らせタイトル
                  example: 'レッスン「変数とは？」閲覧について'
                content:
                  type: "string"
                  description: 本文
                  example: '10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。'
                start_date:
                  type: "string"
                  description: お知らせ開始日
                  example: '2021-10-01 00:00:00'
                end_date:
                  type: "string"
                  description: お知らせ終了日
                  example: '2021-10-10 00:00:00'
                type:
                  type: "string"
                  description: お知らせタイプ
                  example: 'once'
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  data:
                    type: "object"
                    properties:
                      title:
                        $ref: '#/schemas/notification/Title'
                      content:
                        $ref: '#/schemas/notification/Content'
                      start_date:
                        $ref: '#/schemas/notification/StartDate'
                      end_date:
                        $ref: '#/schemas/notification/EndDate'
                      type:
                        $ref: '#/schemas/notification/Type'
  # 講師-生徒
  /api/v1/instructor/student/:
    post:
      tags:
        - Instructor-Student
      operationId: postInstructorStudent
      summary: "生徒情報を登録する。"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - "given_name_by_instructor"
                - "email"
              type: "object"
              properties:
                given_name_by_instructor:
                  type: "string"
                  description: ユーザー名
                  example: 'ユーザー名'
                email:
                  type: "string"
                  description: メールアドレス
                  example: 'test@example.com'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  data:
                    type: "object"
                    properties:
                      id:
                        $ref: '#/schemas/student/StudentId'
                      given_name_by_instructor:
                        $ref: '#/schemas/student/GivenNameByInstructor'
                      email:
                        $ref: '#/schemas/student/Email'

  /api/v1/instructor/student/{student_id}:
    get:
      tags:
        - Instructor-Student
      operationId: getInstructorStudent
      summary: "生徒の詳細情報を取得する。"
      parameters:
        - name: student_id
          in: path
          description: 生徒テーブルの主キー
          required: true
          type: integer
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: object
                    properties:
                      student_id:
                        $ref: '#/schemas/student/StudentId'
                      given_name_by_instructor:
                        $ref: '#/schemas/student/GivenNameByInstructor'
                      nick_name:
                        $ref: '#/schemas/student/NickName'
                      last_name:
                        $ref: '#/schemas/student/LastName'
                      first_name:
                        $ref: '#/schemas/student/FirstName'
                      occupation:
                        $ref: '#/schemas/student/Occupation'
                      email:
                        $ref: '#/schemas/student/Email'
                      purpose:
                        $ref: '#/schemas/student/Purpose'
                      birth_date:
                        $ref: '#/schemas/student/BirthDate'
                      sex:
                        $ref: '#/schemas/student/Sex'
                      address:
                        $ref: '#/schemas/student/Address'
                      last_login_at:
                        $ref: '#/schemas/student/LastLoginAt'
                      courses:
                        type: array
                        items:
                          type: object
                          properties:
                            course_id:
                              $ref: '#/schemas/course/CourseId'
                            title:
                              $ref: '#/schemas/course/Title'
                            image:
                              $ref: '#/schemas/course/Image'
                            status:
                              $ref: '#/schemas/course/Status'
                            progress:
                              $ref: '#/schemas/attendance/Progress'
                            chapters:
                              type: array
                              items:
                                type: object
                                properties:
                                  chapter_id:
                                    $ref: '#/schemas/chapter/ChapterId'
                                  title:
                                    $ref: '#/schemas/chapter/Title'
                                  lessons:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        lesson_id:
                                          $ref: '#/schemas/lesson/LessonId'
                                        lesson_attendance:
                                          type: object
                                          properties:
                                            lesson_attendance_id:
                                              $ref: '#/schemas/lesson-attendance/LessonAttendanceId'
                                            status:
                                              $ref: '#/schemas/lesson-attendance/Status'

  # お知らせ
  /api/v1/notification:
    get:
      tags:
        - Notification
      operationId: getNotification
      summary: "お知らせ一覧を取得する。"
      responses:
        '200':
          description: お知らせ一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/schemas/notification/NotificationId'
                        course_id:
                          $ref: '#/schemas/course/CourseId'
                        course_title:
                          $ref: '#/schemas/course/Title'
                        title:
                          $ref: '#/schemas/notification/Title'
                        content:
                          $ref: '#/schemas/notification/Content'
                        type:
                          $ref: '#/schemas/notification/Type'
  /api/v1/instructor/{instructor_id}:
    post:
      tags:
        - Instructor
      operationId: updateInstructor
      summary: "講師情報を更新する。"
      description: >
        講師情報を更新する。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                nick_name:
                 $ref: '#/schemas/instructor/NickName'
                last_name:
                  $ref: '#/schemas/instructor/LastName'
                first_name:
                  $ref: '#/schemas/instructor/FirstName'
                email:
                  $ref: '#/schemas/instructor/Email'
                profile_image:
                  $ref: '#/schemas/instructor/ProfileImage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                required:
                  - "result"
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  data:
                    type: "object"
                    properties:
                      nick_name:
                        $ref: '#/schemas/instructor/NickName'
                      last_name:
                        $ref: '#/schemas/instructor/LastName'
                      first_name:
                        $ref: '#/schemas/instructor/FirstName'
                      email:
                        $ref: '#/schemas/instructor/Email'
                      profile_image:
                        $ref: '#/schemas/instructor/ProfileImage'
  /api/v1/instructor/{instructor_id}/edit:
    get:
      tags:
        - Instructor
      operationId: getInstructor
      summary: "講師情報を取得する。"
      responses:
        '200':
          description: 講師情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: object
                    properties:
                      instructor_id:
                        $ref: '#/schemas/instructor/InstructorId'
                      nick_name:
                        $ref: '#/schemas/instructor/NickName'
                      last_name:
                        $ref: '#/schemas/instructor/LastName'
                      first_name:
                        $ref: '#/schemas/instructor/FirstName'
                      email:
                        $ref: '#/schemas/instructor/Email'
                      profile_image:
                        $ref: '#/schemas/instructor/ProfileImage'

schemas:
  student:
    StudentId:
      type: integer
      description: 生徒テーブル主キー
      example: 1
    GivenNameByInstructor:
      type: string
      description: ユーザー名
      example: "ユーザー名"
    NickName:
      type: string
      description: ニックネーム
      example: "ニックネーム"
    LastName:
      type: string
      description: 名字
      example: "名字"
    FirstName:
      type: string
      description: 名前
      example: "名前"
    Occupation:
      type: string
      description: 職業
      example: "エンジニア"
    Email:
      type: string
      description: メールアドレス
      example: "test@example.com"
    Purpose:
      type: string
      description: 目的
      example: "スキルアップのため"
    BirthDate:
      type: string
      description: 生年月日
      example: "2022/10/17"
    Sex:
      type: string
      description: 性別
      example: "woman"
    Address:
      type: string
      description: 住所
      example: "東京都"
    LastLoginAt:
      type: string
      description: 最終ログイン日時
      example: "2022/10/17 00:00:00"
    ProfileImage:
      type: string
      description: プロフィール画像
      example: "/student/xxx.png"
  instructor:
    InstructorId:
      type: integer
      description: 講師テーブル主キー
      example: 1
    NickName:
      type: string
      description: ニックネーム
      example: "ニックネーム"
    LastName:
      type: string
      description: 名字
      example: "名字"
    FirstName:
      type: string
      description: 名前
      example: "名前"
    Email:
      type: string
      description: メールアドレス
      example: "test@example.com"
    ProfileImage:
      type: string
      description: プロフィール画像
      example: "/instructor/xxx.png"
  course:
    CourseId:
      type: integer
      description: 講座テーブル主キー
      example: 1
    Title:
      type: "string"
      description: "講座名"
      example: "PHP入門講座"
    Image:
      type: "string"
      description: "講座サムネイル画像ファイルパス"
      example: "/course/xxx.png"
    Status:
      type: "string"
      description: "講座ステータス"
      example: "public"
  attendance:
    AttendanceId:
      type: integer
      description: 受講テーブル主キー
      example: 1
    Progress:
      type: "integer"
      description: "進捗率"
      example: 70
    AttendancedAt:
      type: "string"
      description: "受講日時"
      example: "2022/10/17"
  chapter:
    ChapterId:
      type: integer
      description: チャプターテーブルの主キー
      example: 1
    Title:
      type: string
      description: チャプタータイトル
      example: "Hello Worldを出力する"
    Order:
      type: integer
      description: 順番
      example: 1
  lesson:
    LessonId:
      type: integer
      description: レッスンテーブルの主キー
      example: 1
    Title:
      type: string
      description: レッスン名
      example: "swaggerの書き方"
    Url:
      type: string
      description: 教材動画URL
      example: "http::www.youtube"
    Remarks:
      type: string
      description: 備考欄
      example: "動画index"
    Order:
      type: integer
      description: 順番
      example: 1
  lesson-attendance:
    LessonAttendanceId:
      type: integer
      description: レッスン受講テーブルの主キー
      example: 1
    Status:
      type: string
      description: レッスン受講状態（未着手, 着手, 完了）
      example: "before_attendance"
  notification:
    NotificationId:
      type: integer
      description: お知らせテーブルの主キー
      example: 1
    Title:
      type: string
      description: お知らせタイトル
      example: "レッスン「変数とは？」閲覧について"
    Content:
      type: string
      description: 本文
      example: "10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。"
    StartDate:
      type: string
      description: 開始日
      example: "2022/10/17 00:00:00"
    EndDate:
      type: string
      description: 終了日
      example: "2022/11/17 00:00:00"
    Type:
      type: string
      description: 表示区分（一度だけ表示、毎回表示）
      example: "once"
  pagination:
    Page:
      type: integer
      description: ページ番号
      example: 1
    Total:
      type: integer
      description: ページ総数
      example: 1