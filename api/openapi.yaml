openapi: 3.0.0
info:
  title: 受講管理API
  version: 1.0.0
paths:
  /login:
    post:
      tags:
        - Student-Auth
      operationId: login-student
      summary: 生徒でログインする。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
                - password
              type: object
              properties:
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
                password:
                  type: string
                  description: パスワード
                  example: password
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Authenticated.
  /logout:
    post:
      tags:
        - Student-Auth
      operationId: logout-student
      summary: 生徒でログアウトする。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
  /login/instructor:
    post:
      tags:
        - Instructor-Auth
      operationId: login-instructor
      summary: 講師でログインする。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
                - password
              type: object
              properties:
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
                password:
                  type: string
                  description: パスワード
                  example: password
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Authenticated.
  /logout/instructor:
    post:
      tags:
        - Instructor-Auth
      operationId: logout-instructor
      summary: 講師でログアウトする。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
  /api/v1/student:
    get:
      tags:
        - Student
      operationId: show-student
      summary: 生徒情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
      responses:
        '200':
          description: 生徒情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      student_id:
                        type: integer
                        description: 生徒テーブル主キー
                        example: 1
                      nick_name:
                        type: string
                        description: ニックネーム
                        example: ニックネーム
                      last_name:
                        type: string
                        description: 名字
                        example: 名字
                      first_name:
                        type: string
                        description: 名前
                        example: 名前
                      occupation:
                        type: string
                        description: 職業
                        example: エンジニア
                      purpose:
                        type: string
                        description: 目的
                        example: スキルアップのため
                      email:
                        type: string
                        description: メールアドレス
                        example: test@example.com
                      birth_date:
                        type: string
                        description: 生年月日
                        example: 2022/10/17
                      gender:
                        type: string
                        description: 性別
                        enum: ['man', 'woman']
                      address:
                        type: string
                        description: 住所
                        example: 東京都千代田区
                      profile_image:
                        type: string
                        description: プロフィール画像
                        example: /student/xxx.png
    post:
      tags:
        - Student
      operationId: store-student
      summary: 生徒情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nick_name:
                  type: string
                  description: ニックネーム
                  example: ニックネーム
                last_name:
                  type: string
                  description: 姓
                  example: 名字
                first_name:
                  type: string
                  description: 名
                  example: 名前
                occupation:
                  type: string
                  description: 職業
                  example: エンジニア
                purpose:
                  type: string
                  description: 目的
                  example: スキルアップのため
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
                birth_date:
                  type: string
                  description: 生年月日
                  example: '2022-10-17'
                gender::
                  type: string
                  description: 性別
                  enum: ['man', 'woman']
                address:
                  type: string
                  description: 住所
                  example: 東京都
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/student/update:
    post:
      tags:
        - Student
      operationId: update-student
      summary: 生徒情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nick_name:
                  type: string
                  description: ニックネーム
                  example: ニックネーム
                last_name:
                  type: string
                  description: 姓
                  example: 姓
                first_name:
                  type: string
                  description: 名
                  example: 名
                occupation:
                  type: string
                  description: 職業
                  example: 職業
                purpose:
                  type: string
                  description: 目的
                  example: 目的
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
                birth_date:
                  type: string
                  description: 生年月日
                  example: '2022-10-17'
                gender:
                  type: string
                  description: 性別
                  enum: ['man', 'woman']
                address:
                  type: string
                  description: 住所
                  example: 住所
                profile_image:
                  type: string
                  description: プロフィール画像のバイナリデータ
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/student/verification/{token}:
    post:
      tags:
        - Student
      operationId: verification-student
      summary: 生徒のメールアドレスを認証する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: path
          name: token
          description: 認証トークン
          required: true
          schema:
            type: string
            example: 1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 認証コード
                  example: 123456
                password:
                  type: string
                  description: パスワード
                  example: password
                password_confirmation:
                  type: string
                  description: パスワード確認
                  example: password
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Authorization success.

  /api/v1/attendance/index:
    get:
      tags:
        - Student-Attendance
      operationId: get-attendance-index
      summary: 受講中の講座一覧を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: query
          name: search_word
          description: 検索ワード
          required: false
          schema:
            type: string
          example: PHP
      responses:
        '200':
          description: 受講一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        attendance_id:
                          type: integer
                          description: 受講テーブル主キー
                          example: 1
                        progress:
                          type: integer
                          description: 進捗率
                          example: 70
                        course:
                          type: object
                          properties:
                            course_id:
                              type: integer
                              description: 講座テーブル主キー
                              example: 1
                            title:
                              type: string
                              description: 講座名
                              example: PHP入門講座
                            image:
                              type: string
                              description: 講座サムネイル画像ファイルパス
                              example: /course/xxx.png
                            instructor:
                              type: object
                              properties:
                                instructor_id:
                                  type: integer
                                  description: 講師テーブル主キー
                                  example: 1
                                nick_name:
                                  type: string
                                  description: ニックネーム
                                  example: ニックネーム
                                last_name:
                                  type: string
                                  description: 名字
                                  example: 名字
                                first_name:
                                  type: string
                                  description: 名前
                                  example: 名前
                                email:
                                  type: string
                                  description: メールアドレス
                                  example: test@example.com
                                profile_image:
                                  type: string
                                  description: プロフィール画像
                                  example: /instructor/xxx.png
  /api/v1/attendance/{attendance_id}:
    get:
      tags:
        - Student-Attendance
      operationId: get-attendance
      summary: 受講中の講座の詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: path
          name: attendance_id
          description: 受講テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 受講詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      attendance_id:
                        type: integer
                        description: 受講テーブル主キー
                        example: 1
                      progress:
                        type: integer
                        description: 進捗率
                        example: 70
                      course:
                        type: object
                        properties:
                          course_id:
                            type: integer
                            description: 講座テーブル主キー
                            example: 1
                          title:
                            type: string
                            description: 講座名
                            example: PHP入門講座
                          image:
                            type: string
                            description: 講座サムネイル画像ファイルパス
                            example: /course/xxx.png
                          instructor:
                            type: object
                            properties:
                              instructor_id:
                                type: integer
                                description: 講師テーブル主キー
                                example: 1
                              nick_name:
                                type: string
                                description: ニックネーム
                                example: ニックネーム
                              last_name:
                                type: string
                                description: 名字
                                example: 名字
                              first_name:
                                type: string
                                description: 名前
                                example: 名前
                              email:
                                type: string
                                description: メールアドレス
                                example: test@example.com
                              profile_image:
                                type: string
                                description: プロフィール画像
                                example: /instructor/xxx.png
                          chapters:
                            type: array
                            items:
                              type: object
                              properties:
                                chapter_id:
                                  type: integer
                                  description: チャプターテーブルの主キー
                                  example: 1
                                title:
                                  type: string
                                  description: チャプタータイトル
                                  example: Hello Worldを出力する
                                lessons:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      lesson_id:
                                        type: integer
                                        description: レッスンテーブルの主キー
                                        example: 1
                                      title:
                                        type: string
                                        description: レッスン名
                                        example: swaggerの書き方
                                      url:
                                        type: string
                                        description: 教材動画URL
                                        example: http::www.youtube
                                      remarks:
                                        type: string
                                        description: 備考欄
                                        example: 動画index
                                      lesson_attendance:
                                        type: object
                                        properties:
                                          lesson_attendance_id:
                                            type: integer
                                            description: レッスン受講テーブルの主キー
                                            example: 1
                                          status:
                                            type: string
                                            description: レッスン受講状態
                                            enum: ['before_attendance', 'in_attendance', 'completed_attendance']
  /api/v1/attendance/{attendance_id}/progress:
    get:
      tags:
        - Student-Attendance
      operationId: get-attendance-progress
      summary: 受講中の講座の進捗率を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: attendance_id
          in: path
          description: 受講テーブルの主キー
          required: true
          schema:
            type: integer
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 講座進捗率
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      attendance:
                        type: object
                        properties:
                          attendance_id:
                            type: integer
                            description: 受講テーブル主キー
                            example: 1
                          progress:
                            type: integer
                            example: 10
                          course:
                            type: object
                            properties:
                              course_id:
                                type: integer
                                description: 講座テーブル主キー
                                example: 1
                              title:
                                type: string
                                description: 講座名
                                example: PHP入門講座
                              image:
                                type: string
                                description: 講座サムネイル画像ファイルパス
                                example: /course/xxx.png
                      number_of_completed_chapters:
                        type: integer
                        example: 1
                      number_of_total_chapters:
                        type: integer
                        example: 3
                      number_of_completed_lessons:
                        type: integer
                        example: 2
                      number_of_total_lessons:
                        type: integer
                        example: 6
                      continue_lesson:
                        type: object
                        properties:
                          chapter_id:
                            type: integer
                            description: チャプターテーブルの主キー
                            example: 1
                          lesson_id:
                            type: integer
                            description: レッスンテーブルの主キー
                            example: 1
  /api/v1/attendance/{attendance_id}/course/{course_id}/chapter/{chapter_id}:
    get:
      tags:
        - Student-Attendance
      operationId: get-attendance-chapter
      summary: 受講中の講座のチャプターの詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: attendance_id
          in: path
          description: 受講テーブルの主キー
          required: true
          schema:
            type: integer
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: チャプター詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      attendance_id:
                        type: integer
                        description: 受講テーブル主キー
                        example: 1
                      progress:
                        type: integer
                        description: 進捗率
                        example: 70
                      course:
                        type: object
                        properties:
                          course_id:
                            type: integer
                            description: 講座テーブル主キー
                            example: 1
                          title:
                            type: string
                            description: 講座名
                            example: PHP入門講座
                          image:
                            type: string
                            description: 講座サムネイル画像ファイルパス
                            example: /course/xxx.png
                          chapter:
                            type: object
                            properties:
                              chapter_id:
                                type: integer
                                description: チャプターテーブルの主キー
                                example: 1
                              title:
                                type: string
                                description: チャプタータイトル
                                example: Hello Worldを出力する
                              lessons:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    lesson_id:
                                      type: integer
                                      description: レッスンテーブルの主キー
                                      example: 1
                                    title:
                                      type: string
                                      description: レッスン名
                                      example: swaggerの書き方
                                    url:
                                      type: string
                                      description: 教材動画URL
                                      example: http::www.youtube
                                    remarks:
                                      type: string
                                      description: 備考欄
                                      example: 動画index
                                    lesson_attendance:
                                      type: object
                                      properties:
                                        lesson_attendance_id:
                                          type: integer
                                          description: レッスン受講テーブルの主キー
                                          example: 1
                                        status:
                                          type: string
                                          description: レッスン受講状態
                                          enum: ['before_attendance', 'in_attendance', 'completed_attendance']
  /api/v1/lesson-attendance:
    patch:
      tags:
        - Student-Lesson-Attendance
      operationId: patch-student-lesson-attendance
      summary: レッスン受講状態を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - lesson_attendance_id
                - status
              type: object
              properties:
                lesson_attendance_id:
                  type: integer
                  description: レッスン受講状態ID
                  example: 1
                status:
                  type: string
                  description: レッスン受講状態
                  enum: ['before_attendance', 'in_attendance', 'completed_attendance']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/notification/read:
    get:
      tags:
        - Student-Notification
      operationId: get-student-notification-read
      summary: お知らせを既読にした上で、お知らせ一覧を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
      responses:
        '200':
          description: お知らせ一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        notification_id:
                          type: integer
                          description: お知らせテーブルの主キー
                          example: 1
                        course_id:
                          type: integer
                          description: 講座テーブル主キー
                          example: 1
                        course_title:
                          type: string
                          description: 講座名
                          example: PHP入門講座
                        title:
                          type: string
                          description: お知らせタイトル
                          example: レッスン「変数とは？」閲覧について
                        content:
                          type: string
                          description: 本文
                          example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                        type:
                          type: string
                          description: 表示区分（一度だけ表示、毎回表示）
                          enum: ['once', 'always']

  /api/v1/instructor:
    get:
      tags:
        - Instructor
      operationId: get-instructor
      summary: 講師情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
      responses:
        '200':
          description: 講師情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      instructor_id:
                        type: integer
                        description: 講師テーブル主キー
                        example: 1
                      nick_name:
                        type: string
                        description: ニックネーム
                        example: ニックネーム
                      last_name:
                        type: string
                        description: 名字
                        example: 名字
                      first_name:
                        type: string
                        description: 名前
                        example: 名前
                      email:
                        type: string
                        description: メールアドレス
                        example: test@example.com
                      profile_image:
                        type: string
                        description: プロフィール画像
                        example: /instructor/xxx.png
  /api/v1/instructor/{instructor_id}:
    post:
      tags:
        - Instructor
      operationId: update-instructor
      summary: 講師情報を更新する。
      description: |
        講師情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - in: path
          name: instructor_id
          description: 講師テーブル主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nick_name:
                  type: string
                  description: ニックネーム
                  example: ニックネーム
                last_name:
                  type: string
                  description: 名字
                  example: 名字
                first_name:
                  type: string
                  description: 名前
                  example: 名前
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
                profile_image:
                  type: string
                  description: プロフィール画像のバイナリデータ
                  example: xxxxxxxxxxx
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/attendance:
    post:
      tags:
        - Instructor-Attendance
      operationId: store-instructor-attendance
      summary: 受講情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                student_id:
                  type: integer
                  description: 生徒テーブル主キー
                  example: 1
                course_id:
                  type: integer
                  description: 講座テーブル主キー
                  example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/attendance/{attendance_id}:
    delete:
      tags:
        - Instructor-Attendance
      operationId: delete-instructor-attendance
      summary: 受講情報を削除する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: attendance_id
          in: path
          description: 受講テーブル主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true

  /api/v1/instructor/course/index:
    get:
      tags:
        - Instructor-Course
      operationId: get-instructor-course-index
      summary: 講師講座一覧を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
      responses:
        '200':
          description: 講座一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        course_id:
                          type: integer
                          description: 講座テーブル主キー
                          example: 1
                        title:
                          type: string
                          description: 講座名
                          example: PHP入門講座
                        image:
                          type: string
                          description: 講座サムネイル画像ファイルパス
                          example: /course/xxx.png
                        status:
                          type: string
                          description: 講座ステータス
                          enum: ['public', 'private']
  /api/v1/instructor/course:
    post:
      tags:
        - Instructor-Course
      operationId: store-instructor-course
      summary: 講座情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: 講座タイトル
                image:
                  type: string
                  description: 講座サムネイル画像のバイナリデータ
                  example: xxxxxxxxxxx
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}:
    get:
      tags:
        - Instructor-Course
      operationId: get-instructor-course
      summary: 講座の詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 講座詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      course_id:
                        type: integer
                        description: 講座テーブル主キー
                        example: 1
                      title:
                        type: string
                        description: 講座名
                        example: PHP入門講座
                      image:
                        type: string
                        description: 講座サムネイル画像ファイルパス
                        example: /course/xxx.png
                      status:
                        type: string
                        description: 講座ステータス
                        enum: ['public', 'private']
                      chapters:
                        type: array
                        items:
                          type: object
                          properties:
                            chapter_id:
                              type: integer
                              description: チャプターテーブルの主キー
                              example: 1
                            title:
                              type: string
                              description: チャプタータイトル
                              example: Hello Worldを出力する
                            status:
                              type: string
                              description: チャプターステータス
                              enum: ['public', 'private']
                            lessons:
                              type: array
                              items:
                                type: object
                                properties:
                                  lesson_id:
                                    type: integer
                                    description: レッスンテーブルの主キー
                                    example: 1
                                  title:
                                    type: string
                                    description: レッスン名
                                    example: swaggerの書き方
                                  url:
                                    type: string
                                    description: 教材動画URL
                                    example: http::www.youtube
                                  remarks:
                                    type: string
                                    description: 備考欄
                                    example: 動画index
                                  status:
                                    type: string
                                    description: レッスンステータス
                                    enum: ['public', 'private']
    post:
      tags:
        - Instructor-Course
      operationId: patch-instructor-course
      summary: 講座情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: 講座タイトル
                status:
                  type: string
                  description: ステータス
                  example: public
                image:
                  type: string
                  description: 講座サムネイル画像のバイナリデータ
                  example: xxxxxxxxxxx
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Instructor-Course
      operationId: delete-instructor-course
      summary: 講座情報を削除する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/status:
    put:
      tags:
        - Instructor-Course
      operationId: put-instructor-course-status
      summary: 講座のステータスを一括更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  description: 講座ステータス
                  enum: ['public', 'private']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/attendance/status:
    get:
      tags:
        - Instructor-Course
      operationId: get-instructor-course-attendance-status
      summary: 講座の受講状況を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 講座受講状況
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      chapters:
                        type: array
                        items:
                          type: object
                          properties:
                            chapter_id:
                              type: integer
                              description: チャプターテーブルの主キー
                              example: 1
                            title:
                              type: string
                              description: チャプタータイトル
                              example: Hello Worldを出力する
                            completed_count:
                              type: integer
                              example: 1
                      students_count:
                        type: integer
                        example: 1
  /api/v1/instructor/course/{course_id}/attendance/{period}:
    get:
      tags:
        - Instructor-Course
      operationId: get-instructor-course-attendance
      summary: 講座のログイン率を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: period
          in: path
          description: 期間
          required: true
          schema:
            type: string
            enum: ['week', 'month', 'year']
      responses:
        '200':
          description: 講座受講状況
          content:
            application/json:
              schema:
                type: object
                properties:
                  login_rate:
                    type: integer
                    example: 100
  /api/v1/instructor/course/{course_id}/notification:
    post:
      tags:
        - Instructor-Course
      operationId: post-instructor-course-notification
      summary: 講座のお知らせを登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - title
                - body
              type: object
              properties:
                title:
                  type: string
                  description: お知らせタイトル
                  example: レッスン「変数とは？」閲覧について
                content:
                  type: string
                  description: 本文
                  example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                start_date:
                  type: string
                  description: お知らせ開始日
                  example: '2021-10-01 00:00:00'
                end_date:
                  type: string
                  description: お知らせ終了日
                  example: '2021-10-10 00:00:00'
                type:
                  type: string
                  description: お知らせタイプ
                  enum: ['once', 'always']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/student/index:
    get:
      tags:
        - Instructor-Course
      operationId: get-instructor-course-student-index
      summary: 講座の受講生一覧を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: ページ番号
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 1ページあたりの表示件数
          required: false
          schema:
            type: integer
        - name: sort_by
          in: query
          description: ソート対象
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: ソート順
          required: false
          schema:
            type: string
        - name: input_text
          in: query
          description: 検索文字列
          required: false
          schema:
            type: string
        - name: start_date
          in: query
          description: 日付検索開始日
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          description: 日付検索終了日
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 講座受講生一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        course:
                          type: object
                          properties:
                            course_id:
                              type: integer
                              description: 講座テーブル主キー
                              example: 1
                            title:
                              type: string
                              description: 講座名
                              example: PHP入門講座
                            image:
                              type: string
                              description: 講座サムネイル画像ファイルパス
                              example: /course/xxx.png
                        pagination:
                          type: object
                          properties:
                            page:
                              type: integer
                              description: ページ番号
                              example: 1
                            total:
                              type: integer
                              description: ページ総数
                              example: 1
                        students:
                          type: array
                          items:
                            type: object
                            properties:
                              student_id:
                                type: integer
                                description: 生徒テーブル主キー
                                example: 1
                              nick_name:
                                type: string
                                description: ニックネーム
                                example: ニックネーム
                              email:
                                type: string
                                description: メールアドレス
                                example: test@example.com
                              course_title:
                                type: string
                                description: 講座名
                                example: PHP入門講座
                              last_login_at:
                                type: string
                                description: 最終ログイン日時
                                example: 2022/10/17 00:00:00
                              attendance:
                                type: object
                                properties:
                                  attendance_id:
                                    type: integer
                                    description: 受講テーブル主キー
                                    example: 1
                                  attendanced_at:
                                    type: string
                                    description: 受講日時
                                    example: 2022/10/17 00:00:00

  /api/v1/instructor/course/{course_id}/chapter:
    post:
      tags:
        - Instructor-Chapter
      operationId: store-instructor-chapter
      summary: チャプター情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: チャプタータイトル
                  example: Hello Worldを出力する
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}:
    get:
      tags:
        - Instructor-Chapter
      operationId: get-instructor-chapter
      summary: チャプターの詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: チャプター詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      chapter_id:
                        type: integer
                        description: チャプターテーブルの主キー
                        example: 1
                      title:
                        type: string
                        description: チャプタータイトル
                        example: Hello Worldを出力する
                      status:
                        type: string
                        description: チャプターステータス
                        enum: ['public', 'private']
                      lessons:
                        type: array
                        items:
                          type: object
                          properties:
                            lesson_id:
                              type: integer
                              description: レッスンテーブルの主キー
                              example: 1
                            title:
                              type: string
                              description: レッスン名
                              example: swaggerの書き方
                            url:
                              type: string
                              description: 教材動画URL
                              example: https://www.youtube.com/watch
                            remarks:
                              type: string
                              description: 備考欄
                              example: 動画index
                            status:
                              type: string
                              description: レッスンステータス
                              enum: ['public', 'private']
    patch:
      tags:
        - Instructor-Chapter
      operationId: patch-instructor-chapter
      summary: チャプター情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: チャプタータイトル
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Instructor-Chapter
      operationId: delete-instructor-chapter
      summary: チャプター情報を削除する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/sort:
    post:
      tags:
        - Instructor-Chapter
      operationId: sort-instructor-chapter
      summary: チャプター情報の並び順を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chapters:
                  type: array
                  description: チャプターの配列
                  items:
                    type: object
                    properties:
                      chapter_id:
                        type: integer
                        description: チャプターテーブルの主キー
                        example: 1
                      order:
                        type: integer
                        description: 順番
                        example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/status:
    patch:
      tags:
        - Instructor-Chapter
      operationId: patch-instructor-chapter-status
      summary: チャプターのステータスを更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座ID
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  description: チャプターステータス
                  enum: ['public', 'private']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/status:
    put:
      tags:
        - Instructor-Chapter
      operationId: put-instructor-chapter-status
      summary: チャプターのステータスを一括更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  description: チャプターステータス
                  enum: ['public', 'private']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/lesson:
    post:
      tags:
        - Instructor-Lesson
      operationId: store-instructor-chapter-lesson
      summary: レッスン情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: swaggerの書き方
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/lesson/{lesson_id}:
    put:
      tags:
        - Instructor-Lesson
      operationId: put-instructor-chapter-lesson
      summary: レッスン情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: レッスンタイトル
                url:
                  type: string
                  description: URL
                  example: https://www.youtube.com/watch?v=xxxxxxxxxxx
                remarks:
                  type: string
                  description: 備考
                  example: 備考
                status:
                  type: string
                  description: ステータス
                  example: public
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Instructor-Lesson
      operationId: delete-instructor-chapter-lesson
      summary: レッスン情報を削除する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/lesson/{lesson_id}/title:
    patch:
      tags:
        - Instructor-Lesson
      operationId: patch-instructor-chapter-lesson-title
      summary: レッスン名を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: レッスンタイトル
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/lesson/{lesson_id}/status:
    patch:
      tags:
        - Instructor-Lesson
      operationId: patch-instructor-chapter-lesson-status
      summary: レッスンのステータスを更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  description: レッスンステータス
                  enum: ['public', 'private']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/course/{course_id}/chapter/{chapter_id}/lesson/sort:
    post:
      tags:
        - Instructor-Lesson
      operationId: sort-instructor-chapter-lesson
      summary: レッスン情報の並び順を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lessons:
                  type: array
                  description: レッスンの配列
                  items:
                    type: object
                    properties:
                      lesson_id:
                        type: integer
                        description: レッスンテーブルの主キー
                        example: 1
                      order:
                        type: integer
                        description: 順番
                        example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true

  /api/v1/instructor/student/:
    post:
      tags:
        - Instructor-Student
      operationId: store-instructor-student
      summary: 生徒情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        content:
          application/json:
            schema:
              required:
                - given_name_by_instructor
                - email
              type: object
              properties:
                given_name_by_instructor:
                  type: string
                  description: ユーザー名
                  example: ユーザー名
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/instructor/student/{student_id}:
    get:
      tags:
        - Instructor-Student
      operationId: get-instructor-student
      summary: 生徒の詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: student_id
          in: path
          description: 生徒テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      student_id:
                        type: integer
                        description: 生徒テーブル主キー
                        example: 1
                      given_name_by_instructor:
                        type: string
                        description: ユーザー名
                        example: ユーザー名
                      nick_name:
                        type: string
                        description: ニックネーム
                        example: ニックネーム
                      last_name:
                        type: string
                        description: 名字
                        example: 名字
                      first_name:
                        type: string
                        description: 名前
                        example: 名前
                      occupation:
                        type: string
                        description: 職業
                        example: エンジニア
                      email:
                        type: string
                        description: メールアドレス
                        example: test@example.com
                      purpose:
                        type: string
                        description: 目的
                        example: スキルアップのため
                      birth_date:
                        type: string
                        description: 生年月日
                        example: 2022/10/17
                      gender:
                        type: string
                        description: 性別
                        enum: ['man', 'woman']
                      address:
                        type: string
                        description: 住所
                        example: 東京都
                      created_at:
                        type: string
                        description: 登録日時
                        example: 2022/10/17 00:00:00
                      last_login_at:
                        type: string
                        description: 最終ログイン日時
                        example: 2022/10/17 00:00:00
                      profile_image:
                        type: string
                        description: プロフィール画像ファイルパス
                        example: /profile/xxx.png
  /api/v1/instructor/notification/index:
    get:
      tags:
        - Instructor-Notification
      operationId: get-instructor-notification
      summary: お知らせ一覧を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: page
          in: query
          description: ページ番号
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 1ページあたりの表示数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: お知らせ一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        notifications:
                          type: array
                          items:
                            type: object
                            properties:
                              notification_id:
                                type: integer
                                description: お知らせテーブルの主キー
                                example: 1
                              course_id:
                                type: integer
                                description: 講座テーブル主キー
                                example: 1
                              course_title:
                                type: string
                                description: 講座名
                                example: PHP入門講座
                              title:
                                type: string
                                description: お知らせタイトル
                                example: レッスン「変数とは？」閲覧について
                              content:
                                type: string
                                description: 本文
                                example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                              start_date:
                                type: string
                                description: 開始日
                                example: 2022/10/17 00:00:00
                              end_date:
                                type: string
                                description: 終了日
                                example: 2022/11/17 00:00:00
                              type:
                                type: string
                                description: 表示区分（一度だけ表示、毎回表示）
                                enum: ['once', 'always']
                        pagination:
                          type: object
                          properties:
                            page:
                              type: integer
                              description: ページ番号
                              example: 1
                            total:
                              type: integer
                              description: ページ総数
                              example: 1
  /api/v1/instructor/notification/{notification_id}:
    get:
      tags:
        - Instructor-Notification
      operationId: get-instructor-notification
      summary: お知らせの詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: notification_id
          in: path
          description: お知らせテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: お知らせ詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      notification_id:
                        type: integer
                        description: お知らせテーブルの主キー
                        example: 1
                      couse_id:
                        type: integer
                        description: 講座テーブル主キー
                        example: 1
                      course_title:
                        type: string
                        description: 講座名
                        example: PHP入門講座
                      title:
                        type: string
                        description: お知らせタイトル
                        example: レッスン「変数とは？」閲覧について
                      content:
                        type: string
                        description: 本文
                        example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                      start_date:
                        type: string
                        description: 開始日
                        example: 2022/10/17 00:00:00
                      end_date:
                        type: string
                        description: 終了日
                        example: 2022/11/17 00:00:00
                      type:
                        type: string
                        description: 表示区分（一度だけ表示、毎回表示）
                        enum: ['once', 'always']
    patch:
      tags:
        - Instructor-Notification
      operationId: patch-instructor-notification
      summary: お知らせ情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: notification_id
          in: path
          description: お知らせテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - title
                - content
                - start_date
                - end_date
                - type
              type: object
              properties:
                title:
                  type: string
                  description: お知らせタイトル
                  example: レッスン「変数とは？」閲覧について
                content:
                  type: string
                  description: 本文
                  example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                start_date:
                  type: string
                  description: お知らせ開始日
                  example: '2021-10-01 00:00:00'
                end_date:
                  type: string
                  description: お知らせ終了日
                  example: '2021-10-10 00:00:00'
                type:
                  type: string
                  description: お知らせタイプ
                  example: once
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/instructor/{instructor_id}:
    get:
      tags:
        - Manager-Instructor
      operationId: get-manager-instructor
      summary: 講師情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      responses:
        '200':
          description: 講師情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      instructor_id:
                        type: integer
                        description: 講師テーブル主キー
                        example: 1
                      nick_name:
                        type: string
                        description: ニックネーム
                        example: ニックネーム
                      last_name:
                        type: string
                        description: 名字
                        example: 名字
                      first_name:
                        type: string
                        description: 名前
                        example: 名前
                      email:
                        type: string
                        description: メールアドレス
                        example: test@example.com
                      profile_image:
                        type: string
                        description: プロフィール画像
                        example: /instructor/xxx.png
    post:
      tags:
        - Manager-Instructor
      operationId: update-manager-instructor
      summary: 講師情報を更新する。
      description: |
        講師情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - in: path
          name: instructor_id
          description: 講師テーブル主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nick_name:
                  type: string
                  description: ニックネーム
                  example: ニックネーム
                last_name:
                  type: string
                  description: 名字
                  example: 名字
                first_name:
                  type: string
                  description: 名前
                  example: 名前
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
                profile_image:
                  type: string
                  description: プロフィール画像のバイナリデータ
                  example: xxxxxxxxxxx
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true

  /api/v1/manager/attendance:
    post:
      tags:
        - Manager-Attendance
      operationId: store-instructor-attendance
      summary: 受講情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                student_id:
                  type: integer
                  description: 生徒テーブル主キー
                  example: 1
                course_id:
                  type: integer
                  description: 講座テーブル主キー
                  example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/attendance/{attendance_id}:
    delete:
      tags:
        - Manager-Attendance
      operationId: delete-instructor-attendance
      summary: 受講情報を削除する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: attendance_id
          in: path
          description: 受講テーブル主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true

  /api/v1/manager/course/index:
    get:
      tags:
        - Manager-Course
      operationId: get-instructor-course-index
      summary: 講師講座一覧を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
      responses:
        '200':
          description: 講座一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        course_id:
                          type: integer
                          description: 講座テーブル主キー
                          example: 1
                        title:
                          type: string
                          description: 講座名
                          example: PHP入門講座
                        image:
                          type: string
                          description: 講座サムネイル画像ファイルパス
                          example: /course/xxx.png
                        status:
                          type: string
                          description: 講座ステータス
                          enum: ['public', 'private']
  /api/v1/manager/course:
    post:
      tags:
        - Manager-Course
      operationId: store-instructor-course
      summary: 講座情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: 講座タイトル
                image:
                  type: string
                  description: 講座サムネイル画像のバイナリデータ
                  example: xxxxxxxxxxx
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}:
    get:
      tags:
        - Manager-Course
      operationId: get-instructor-course
      summary: 講座の詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 講座詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      course_id:
                        type: integer
                        description: 講座テーブル主キー
                        example: 1
                      title:
                        type: string
                        description: 講座名
                        example: PHP入門講座
                      image:
                        type: string
                        description: 講座サムネイル画像ファイルパス
                        example: /course/xxx.png
                      status:
                        type: string
                        description: 講座ステータス
                        enum: ['public', 'private']
                      chapters:
                        type: array
                        items:
                          type: object
                          properties:
                            chapter_id:
                              type: integer
                              description: チャプターテーブルの主キー
                              example: 1
                            title:
                              type: string
                              description: チャプタータイトル
                              example: Hello Worldを出力する
                            status:
                              type: string
                              description: チャプターステータス
                              enum: ['public', 'private']
                            lessons:
                              type: array
                              items:
                                type: object
                                properties:
                                  lesson_id:
                                    type: integer
                                    description: レッスンテーブルの主キー
                                    example: 1
                                  title:
                                    type: string
                                    description: レッスン名
                                    example: swaggerの書き方
                                  url:
                                    type: string
                                    description: 教材動画URL
                                    example: http::www.youtube
                                  remarks:
                                    type: string
                                    description: 備考欄
                                    example: 動画index
                                  status:
                                    type: string
                                    description: レッスンステータス
                                    enum: ['public', 'private']
    post:
      tags:
        - Manager-Course
      operationId: patch-instructor-course
      summary: 講座情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: 講座タイトル
                status:
                  type: string
                  description: ステータス
                  example: public
                image:
                  type: string
                  description: 講座サムネイル画像のバイナリデータ
                  example: xxxxxxxxxxx
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Manager-Course
      operationId: delete-instructor-course
      summary: 講座情報を削除する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/status:
    put:
      tags:
        - Manager-Course
      operationId: put-instructor-course-status
      summary: 講座のステータスを一括更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  description: 講座ステータス
                  enum: ['public', 'private']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/attendance/status:
    get:
      tags:
        - Manager-Course
      operationId: get-instructor-course-attendance-status
      summary: 講座の受講状況を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 講座受講状況
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      chapters:
                        type: array
                        items:
                          type: object
                          properties:
                            chapter_id:
                              type: integer
                              description: チャプターテーブルの主キー
                              example: 1
                            title:
                              type: string
                              description: チャプタータイトル
                              example: Hello Worldを出力する
                            completed_count:
                              type: integer
                              example: 1
                      students_count:
                        type: integer
                        example: 1
  /api/v1/manager/course/{course_id}/attendance/{period}:
    get:
      tags:
        - Manager-Course
      operationId: get-instructor-course-attendance
      summary: 講座のログイン率を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: period
          in: path
          description: 期間
          required: true
          schema:
            type: string
            enum: ['week', 'month', 'year']
      responses:
        '200':
          description: 講座受講状況
          content:
            application/json:
              schema:
                type: object
                properties:
                  login_rate:
                    type: integer
                    example: 100
  /api/v1/manager/course/{course_id}/notification:
    post:
      tags:
        - Manager-Course
      operationId: post-instructor-course-notification
      summary: 講座のお知らせを登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - title
                - body
              type: object
              properties:
                title:
                  type: string
                  description: お知らせタイトル
                  example: レッスン「変数とは？」閲覧について
                content:
                  type: string
                  description: 本文
                  example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                start_date:
                  type: string
                  description: お知らせ開始日
                  example: '2021-10-01 00:00:00'
                end_date:
                  type: string
                  description: お知らせ終了日
                  example: '2021-10-10 00:00:00'
                type:
                  type: string
                  description: お知らせタイプ
                  enum: ['once', 'always']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/student/index:
    get:
      tags:
        - Manager-Course
      operationId: get-instructor-course-student-index
      summary: 講座の受講生一覧を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: ページ番号
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 1ページあたりの表示件数
          required: false
          schema:
            type: integer
        - name: sort_by
          in: query
          description: ソート対象
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: ソート順
          required: false
          schema:
            type: string
        - name: input_text
          in: query
          description: 検索文字列
          required: false
          schema:
            type: string
        - name: start_date
          in: query
          description: 日付検索開始日
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          description: 日付検索終了日
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 講座受講生一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        course:
                          type: object
                          properties:
                            course_id:
                              type: integer
                              description: 講座テーブル主キー
                              example: 1
                            title:
                              type: string
                              description: 講座名
                              example: PHP入門講座
                            image:
                              type: string
                              description: 講座サムネイル画像ファイルパス
                              example: /course/xxx.png
                        pagination:
                          type: object
                          properties:
                            page:
                              type: integer
                              description: ページ番号
                              example: 1
                            total:
                              type: integer
                              description: ページ総数
                              example: 1
                        students:
                          type: array
                          items:
                            type: object
                            properties:
                              student_id:
                                type: integer
                                description: 生徒テーブル主キー
                                example: 1
                              nick_name:
                                type: string
                                description: ニックネーム
                                example: ニックネーム
                              email:
                                type: string
                                description: メールアドレス
                                example: test@example.com
                              course_title:
                                type: string
                                description: 講座名
                                example: PHP入門講座
                              last_login_at:
                                type: string
                                description: 最終ログイン日時
                                example: 2022/10/17 00:00:00
                              attendance:
                                type: object
                                properties:
                                  attendance_id:
                                    type: integer
                                    description: 受講テーブル主キー
                                    example: 1
                                  attendanced_at:
                                    type: string
                                    description: 受講日時
                                    example: 2022/10/17 00:00:00

  /api/v1/manager/course/{course_id}/chapter:
    post:
      tags:
        - Manager-Chapter
      operationId: store-instructor-chapter
      summary: チャプター情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: チャプタータイトル
                  example: Hello Worldを出力する
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/{chapter_id}:
    get:
      tags:
        - Manager-Chapter
      operationId: get-instructor-chapter
      summary: チャプターの詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: チャプター詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      chapter_id:
                        type: integer
                        description: チャプターテーブルの主キー
                        example: 1
                      title:
                        type: string
                        description: チャプタータイトル
                        example: Hello Worldを出力する
                      status:
                        type: string
                        description: チャプターステータス
                        enum: ['public', 'private']
                      lessons:
                        type: array
                        items:
                          type: object
                          properties:
                            lesson_id:
                              type: integer
                              description: レッスンテーブルの主キー
                              example: 1
                            title:
                              type: string
                              description: レッスン名
                              example: swaggerの書き方
                            url:
                              type: string
                              description: 教材動画URL
                              example: https://www.youtube.com/watch
                            remarks:
                              type: string
                              description: 備考欄
                              example: 動画index
                            status:
                              type: string
                              description: レッスンステータス
                              enum: ['public', 'private']
    patch:
      tags:
        - Manager-Chapter
      operationId: patch-instructor-chapter
      summary: チャプター情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: チャプタータイトル
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Manager-Chapter
      operationId: delete-instructor-chapter
      summary: チャプター情報を削除する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/sort:
    post:
      tags:
        - Manager-Chapter
      operationId: sort-instructor-chapter
      summary: チャプター情報の並び順を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chapters:
                  type: array
                  description: チャプターの配列
                  items:
                    type: object
                    properties:
                      chapter_id:
                        type: integer
                        description: チャプターテーブルの主キー
                        example: 1
                      order:
                        type: integer
                        description: 順番
                        example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/{chapter_id}/status:
    patch:
      tags:
        - Manager-Chapter
      operationId: patch-instructor-chapter-status
      summary: チャプターのステータスを更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座ID
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  description: チャプターステータス
                  enum: ['public', 'private']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/status:
    put:
      tags:
        - Manager-Chapter
      operationId: put-instructor-chapter-status
      summary: チャプターのステータスを一括更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  description: チャプターステータス
                  enum: ['public', 'private']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/{chapter_id}/lesson:
    post:
      tags:
        - Manager-Lesson
      operationId: store-instructor-chapter-lesson
      summary: レッスン情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: swaggerの書き方
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/{chapter_id}/lesson/{lesson_id}:
    put:
      tags:
        - Manager-Lesson
      operationId: put-instructor-chapter-lesson
      summary: レッスン情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: レッスンタイトル
                url:
                  type: string
                  description: URL
                  example: https://www.youtube.com/watch?v=xxxxxxxxxxx
                remarks:
                  type: string
                  description: 備考
                  example: 備考
                status:
                  type: string
                  description: ステータス
                  example: public
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Manager-Lesson
      operationId: delete-instructor-chapter-lesson
      summary: レッスン情報を削除する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/{chapter_id}/lesson/{lesson_id}/title:
    patch:
      tags:
        - Manager-Lesson
      operationId: patch-instructor-chapter-lesson-title
      summary: レッスン名を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: タイトル
                  example: レッスンタイトル
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - result
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/{chapter_id}/lesson/{lesson_id}/status:
    patch:
      tags:
        - Manager-Lesson
      operationId: patch-instructor-chapter-lesson-status
      summary: レッスンのステータスを更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
        - name: lesson_id
          in: path
          description: レッスンテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: string
                  description: レッスンステータス
                  enum: ['public', 'private']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/course/{course_id}/chapter/{chapter_id}/lesson/sort:
    post:
      tags:
        - Manager-Lesson
      operationId: sort-instructor-chapter-lesson
      summary: レッスン情報の並び順を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: course_id
          in: path
          description: 講座テーブルの主キー
          required: true
          schema:
            type: integer
        - name: chapter_id
          in: path
          description: チャプターテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lessons:
                  type: array
                  description: レッスンの配列
                  items:
                    type: object
                    properties:
                      lesson_id:
                        type: integer
                        description: レッスンテーブルの主キー
                        example: 1
                      order:
                        type: integer
                        description: 順番
                        example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true

  /api/v1/manager/student/:
    post:
      tags:
        - Manager-Student
      operationId: store-instructor-student
      summary: 生徒情報を登録する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
      requestBody:
        content:
          application/json:
            schema:
              required:
                - given_name_by_instructor
                - email
              type: object
              properties:
                given_name_by_instructor:
                  type: string
                  description: ユーザー名
                  example: ユーザー名
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /api/v1/manager/student/{student_id}:
    get:
      tags:
        - Manager-Student
      operationId: get-instructor-student
      summary: 生徒の詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: student_id
          in: path
          description: 生徒テーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      student_id:
                        type: integer
                        description: 生徒テーブル主キー
                        example: 1
                      given_name_by_instructor:
                        type: string
                        description: ユーザー名
                        example: ユーザー名
                      nick_name:
                        type: string
                        description: ニックネーム
                        example: ニックネーム
                      last_name:
                        type: string
                        description: 名字
                        example: 名字
                      first_name:
                        type: string
                        description: 名前
                        example: 名前
                      occupation:
                        type: string
                        description: 職業
                        example: エンジニア
                      email:
                        type: string
                        description: メールアドレス
                        example: test@example.com
                      purpose:
                        type: string
                        description: 目的
                        example: スキルアップのため
                      birth_date:
                        type: string
                        description: 生年月日
                        example: 2022/10/17
                      gender:
                        type: string
                        description: 性別
                        enum: ['man', 'woman']
                      address:
                        type: string
                        description: 住所
                        example: 東京都
                      created_at:
                        type: string
                        description: 登録日時
                        example: 2022/10/17 00:00:00
                      last_login_at:
                        type: string
                        description: 最終ログイン日時
                        example: 2022/10/17 00:00:00
                      profile_image:
                        type: string
                        description: プロフィール画像ファイルパス
                        example: /profile/xxx.png
  /api/v1/manager/notification/index:
    get:
      tags:
        - Manager-Notification
      operationId: get-instructor-notification
      summary: お知らせ一覧を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: page
          in: query
          description: ページ番号
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 1ページあたりの表示数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: お知らせ一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        notifications:
                          type: array
                          items:
                            type: object
                            properties:
                              notification_id:
                                type: integer
                                description: お知らせテーブルの主キー
                                example: 1
                              course_id:
                                type: integer
                                description: 講座テーブル主キー
                                example: 1
                              course_title:
                                type: string
                                description: 講座名
                                example: PHP入門講座
                              title:
                                type: string
                                description: お知らせタイトル
                                example: レッスン「変数とは？」閲覧について
                              content:
                                type: string
                                description: 本文
                                example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                              start_date:
                                type: string
                                description: 開始日
                                example: 2022/10/17 00:00:00
                              end_date:
                                type: string
                                description: 終了日
                                example: 2022/11/17 00:00:00
                              type:
                                type: string
                                description: 表示区分（一度だけ表示、毎回表示）
                                enum: ['once', 'always']
                        pagination:
                          type: object
                          properties:
                            page:
                              type: integer
                              description: ページ番号
                              example: 1
                            total:
                              type: integer
                              description: ページ総数
                              example: 1
  /api/v1/manager/notification/{notification_id}:
    get:
      tags:
        - Manager-Notification
      operationId: get-instructor-notification
      summary: お知らせの詳細情報を取得する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - name: notification_id
          in: path
          description: お知らせテーブルの主キー
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: お知らせ詳細情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      notification_id:
                        type: integer
                        description: お知らせテーブルの主キー
                        example: 1
                      couse_id:
                        type: integer
                        description: 講座テーブル主キー
                        example: 1
                      course_title:
                        type: string
                        description: 講座名
                        example: PHP入門講座
                      title:
                        type: string
                        description: お知らせタイトル
                        example: レッスン「変数とは？」閲覧について
                      content:
                        type: string
                        description: 本文
                        example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                      start_date:
                        type: string
                        description: 開始日
                        example: 2022/10/17 00:00:00
                      end_date:
                        type: string
                        description: 終了日
                        example: 2022/11/17 00:00:00
                      type:
                        type: string
                        description: 表示区分（一度だけ表示、毎回表示）
                        enum: ['once', 'always']
    patch:
      tags:
        - Instructor-Notification
      operationId: patch-instructor-notification
      summary: お知らせ情報を更新する。
      parameters:
        - in: header
          name: Origin
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: Referer
          schema:
            type: string
          required: true
          example: http://localhost:3000
        - in: header
          name: X-XSRF-TOKEN
          schema:
            type: string
          required: true
          example: eyJpdiI6IjJ2Z0J
        - name: notification_id
          in: path
          description: お知らせテーブルの主キー
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - title
                - content
                - start_date
                - end_date
                - type
              type: object
              properties:
                title:
                  type: string
                  description: お知らせタイトル
                  example: レッスン「変数とは？」閲覧について
                content:
                  type: string
                  description: 本文
                  example: 10月1日〜10日の間、レッスン「変数とは？」がメンテナンスにつき閲覧できなくなります。
                start_date:
                  type: string
                  description: お知らせ開始日
                  example: '2021-10-01 00:00:00'
                end_date:
                  type: string
                  description: お知らせ終了日
                  example: '2021-10-10 00:00:00'
                type:
                  type: string
                  description: お知らせタイプ
                  example: once
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
