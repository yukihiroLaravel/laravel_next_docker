openapi: 3.0.0
info:
  title: Student API
  version: 1.0.0
paths:
  /api/v1/student/edit:
    get:
      tags:
        - Student
      operationId: getStudent
      summary: 生徒情報を取得する。
      responses:
        '200':
          description: 生徒情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      student_id:
                        type: integer
                        description: 生徒テーブル主キー
                        example: 1
                      nick_name:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/nick_name'
                      last_name:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/last_name'
                      first_name:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/first_name'
                      occupation:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/occupation'
                      purpose:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/purpose'
                      email:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/email'
                      birth_date:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/birth_date'
                      sex:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/sex'
                      address:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/address'
                      profile_image:
                        type: string
                        description: プロフィール画像
                        example: /student/xxx.png
  /api/v1/student/:
    post:
      tags:
        - Student
      operationId: storeStudent
      summary: 生徒情報を登録する。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nick_name:
                  type: string
                  description: ニックネーム
                  example: ニックネーム
                last_name:
                  type: string
                  description: 姓
                  example: 名字
                first_name:
                  type: string
                  description: 名
                  example: 名前
                occupation:
                  type: string
                  description: 職業
                  example: エンジニア
                purpose:
                  type: string
                  description: 目的
                  example: スキルアップのため
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
                birth_date:
                  type: string
                  description: 生年月日
                  example: '2022-10-17'
                sex:
                  type: string
                  description: 性別
                  example: woman
                address:
                  type: string
                  description: 住所
                  example: 東京都
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      nick_name:
                        type: string
                        description: ニックネーム
                        example: ニックネーム
                      last_name:
                        type: string
                        description: 名字
                        example: 名字
                      first_name:
                        type: string
                        description: 名前
                        example: 名前
                      occupation:
                        type: string
                        description: 職業
                        example: エンジニア
                      purpose:
                        type: string
                        description: 目的
                        example: スキルアップのため
                      email:
                        type: string
                        description: メールアドレス
                        example: test@example.com
                      birth_date:
                        type: string
                        description: 生年月日
                        example: 2022/10/17
                      sex:
                        type: string
                        description: 性別
                        example: man
                      address:
                        type: string
                        description: 住所
                        example: 東京都
  /api/v1/student/update:
    post:
      tags:
        - Student
      operationId: patchStudent
      summary: 生徒情報を更新する。
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nick_name:
                  type: string
                  description: ニックネーム
                  example: ニックネーム
                last_name:
                  type: string
                  description: 姓
                  example: 姓
                first_name:
                  type: string
                  description: 名
                  example: 名
                occupation:
                  type: string
                  description: 職業
                  example: 職業
                purpose:
                  type: string
                  description: 目的
                  example: 目的
                email:
                  type: string
                  description: メールアドレス
                  example: test@example.com
                birth_date:
                  type: string
                  description: 生年月日
                  example: '2022-10-17'
                sex:
                  type: string
                  description: 性別
                  example: man
                address:
                  type: string
                  description: 住所
                  example: 住所
                profile_image:
                  type: file
                  description: プロフィール画像
                  example: profile.png
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      nick_name:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/nick_name'
                      last_name:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/last_name'
                      first_name:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/first_name'
                      occupation:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/occupation'
                      purpose:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/purpose'
                      email:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/email'
                      birth_date:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/birth_date'
                      sex:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/sex'
                      address:
                        $ref: '#/paths/~1api~1v1~1student~1/post/responses/200/content/application~1json/schema/properties/data/properties/address'
                      profile_image:
                        $ref: '#/paths/~1api~1v1~1student~1edit/get/responses/200/content/application~1json/schema/properties/data/properties/profile_image'
