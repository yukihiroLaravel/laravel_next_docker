openapi: 3.0.0
info:
  title: Login API
  version: 1.0.0
  description: This is the Login API
paths:
  /login:
    post:
      tags:
        - Login
      operationId: postLoginStudent
      summary: "生徒ログイン"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "email"
                - "password"
              type: "object"
              properties:
                email:
                  type: "string"
                  description: メールアドレス
                  example: 'test@example.com'
                password:
                  type: "string"
                  description: パスワード
                  example: 'password'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  message:
                    type: "string"
                    example: 'Authenticated.'
  /logout:
    post:
      tags:
        - Login
      operationId: postLogoutStudent
      summary: "生徒ログアウト"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: 'Unauthenticated.'
  /login/instructor:
    post:
      tags:
        - Login
      operationId: postLoginInstructor
      summary: "講師ログイン"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - "email"
                - "password"
              type: "object"
              properties:
                email:
                  type: "string"
                  description: メールアドレス
                  example: 'test@example.com'
                password:
                  type: "string"
                  description: パスワード
                  example: 'password'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
                    example: true
                  message:
                    type: "string"
                    example: 'Authenticated.'
  /logout/instructor:
    post:
      tags:
        - Login
      operationId: postLogoutInstructor
      summary: "講師ログアウト"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: 'Unauthenticated.'
  /api/v1/user:
    get:
      tags:
        - Login
      operationId: getLoginUser
      summary: "認証者情報を取得する"
      responses:
        '200':
          description: 認証者情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  given_name_by_instructor:
                    $ref: '../components/schemas/Student.yml#/GivenNameByInstructor'
                  nick_name:
                    $ref: '../components/schemas/Student.yml#/StudentNickName'
                  last_name:
                    $ref: '../components/schemas/Student.yml#/LastName'
                  first_name:
                    $ref: '../components/schemas/Student.yml#/FirstName'
                  occupation:
                    $ref: '../components/schemas/Student.yml#/Occupation'
                  email:
                    $ref: '../components/schemas/Student.yml#/StudentEmail'
                  purpose:
                    $ref: '../components/schemas/Student.yml#/Purpose'
                  birth_date:
                    $ref: '../components/schemas/Student.yml#/BirthDate'
                  sex:
                    $ref: '../components/schemas/Student.yml#/Sex'
                  address:
                    $ref: '../components/schemas/Student.yml#/Address'
